---
import Layout from './Layout.astro';

export interface Props {
  frontmatter: {
    title: string;
    date: string;
    category: string;
    author: string;
    readTime: string;
    description: string;
    featured?: boolean;
    tags?: string[];
  };
}

const { frontmatter } = Astro.props;

// Format date for display
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};
---

<Layout title={`${frontmatter.title} | Blog`} description={frontmatter.description}>
  <main class="min-h-screen py-20 px-4">
    <div class="container mx-auto max-w-4xl">
      <!-- Navigation -->
      <div class="mb-8">
        <a href="/blog" class="inline-flex items-center text-blue-600 hover:text-blue-800 mb-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
          </svg>
          Volver al Blog
        </a>
      </div>

      <!-- Article Header -->
      <header class="bg-white/80 backdrop-blur-lg rounded-3xl p-8 shadow-xl mb-8">
        <!-- Category and Featured Badge -->
        <div class="flex items-center gap-3 mb-4">
          <span class="px-4 py-2 bg-blue-100 text-blue-600 rounded-full text-sm font-medium">
            {frontmatter.category}
          </span>
          {frontmatter.featured && (
            <span class="px-4 py-2 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-full text-sm font-medium">
              ⭐ Destacado
            </span>
          )}
        </div>

        <!-- Title -->
        <h1 class="text-4xl md:text-5xl font-bold text-blue-900 mb-6 leading-tight">
          {frontmatter.title}
        </h1>

        <!-- Meta Information -->
        <div class="flex flex-col md:flex-row md:items-center gap-4 text-blue-600">
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
              <path fill-rule="evenodd" d="M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" clip-rule="evenodd" />
            </svg>
            <span>Por {frontmatter.author}</span>
          </div>
          
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
              <path fill-rule="evenodd" d="M6.75 2.25A.75.75 0 017.5 3v1.5h9V3A.75.75 0 0118 3v1.5h.75a3 3 0 013 3v11.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V7.5a3 3 0 013-3H6V3a.75.75 0 01.75-.75zm13.5 9a1.5 1.5 0 00-1.5-1.5H5.25a1.5 1.5 0 00-1.5 1.5v7.5a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5v-7.5z" clip-rule="evenodd" />
            </svg>
            <time datetime={frontmatter.date}>{formatDate(frontmatter.date)}</time>
          </div>
          
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
              <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM12.75 6a.75.75 0 00-1.5 0v6c0 .414.336.75.75.75h4.5a.75.75 0 000-1.5h-3.75V6z" clip-rule="evenodd" />
            </svg>
            <span>{frontmatter.readTime} de lectura</span>
          </div>
        </div>

        <!-- Tags -->
        {frontmatter.tags && frontmatter.tags.length > 0 && (
          <div class="mt-6 pt-6 border-t border-blue-100">
            <div class="flex flex-wrap gap-2">
              {frontmatter.tags.map((tag) => (
                <span class="px-3 py-1 bg-blue-50 text-blue-600 rounded-full text-sm">
                  {tag}
                </span>
              ))}
            </div>
          </div>
        )}
      </header>

      <!-- Article Content -->
      <article class="bg-white/80 backdrop-blur-lg rounded-3xl p-8 md:p-12 shadow-xl prose prose-lg max-w-none blog-content">
        <slot />
      </article>

      <!-- Share & Navigation -->
      <div class="mt-8 bg-white/80 backdrop-blur-lg rounded-3xl p-6 shadow-xl">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
          <!-- Share Buttons -->
          <div class="flex items-center gap-4">
            <span class="text-blue-900 font-medium">Compartir:</span>
            <div class="flex gap-2">
              <a
                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(frontmatter.title)}&url=${encodeURIComponent(Astro.url.href)}`}
                target="_blank"
                rel="noopener noreferrer"
                class="p-2 bg-blue-100 text-blue-600 rounded-full hover:bg-blue-200 transition-colors"
                aria-label="Compartir en Twitter"
              >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                </svg>
              </a>
              <a
                href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}`}
                target="_blank"
                rel="noopener noreferrer"
                class="p-2 bg-blue-100 text-blue-600 rounded-full hover:bg-blue-200 transition-colors"
                aria-label="Compartir en LinkedIn"
              >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path fill-rule="evenodd" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z" clip-rule="evenodd" />
                </svg>
              </a>
            </div>
          </div>

          <!-- Back to Blog -->
          <a
            href="/blog"
            class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 transition-colors"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
            </svg>
            Más Artículos
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Process references section
    const article = document.querySelector('.blog-content');
    if (!article) return;

    // Find references heading
    const headings = article.querySelectorAll('h2, h3');
    let referencesHeading = null;
    
    headings.forEach(heading => {
      if (heading.textContent?.includes('Referencias')) {
        referencesHeading = heading;
      }
    });

    if (referencesHeading) {
      // Find all text content after references heading
      let currentElement = referencesHeading.nextElementSibling;
      const referenceTexts = [];

      while (currentElement) {
        if (currentElement.tagName === 'H2' || currentElement.tagName === 'H3') {
          break; // Stop at next heading
        }
        
        if (currentElement.tagName === 'P') {
          const text = currentElement.textContent?.trim();
          if (text && text.length > 20) { // Ignore empty or very short paragraphs
            referenceTexts.push(text);
            currentElement.style.display = 'none'; // Hide original paragraph
          }
        }
        
        currentElement = currentElement.nextElementSibling;
      }

      // Create structured reference list
      if (referenceTexts.length > 0) {
        const referencesList = document.createElement('div');
        referencesList.className = 'references-container';
        referencesList.innerHTML = `
          <div class="references-list">
            ${referenceTexts.map((ref, index) => `
              <div class="reference-item">
                <span class="reference-number">${index + 1}</span>
                <p class="reference-text">${ref}</p>
              </div>
            `).join('')}
          </div>
        `;

        referencesHeading.parentNode?.insertBefore(referencesList, referencesHeading.nextSibling);
      }
    }

    // Add copy button to code blocks
    const codeBlocks = article.querySelectorAll('pre code');
    codeBlocks.forEach(codeBlock => {
      const pre = codeBlock.parentElement;
      if (pre) {
        const copyButton = document.createElement('button');
        copyButton.textContent = 'Copiar';
        copyButton.className = 'copy-button';
        copyButton.onclick = () => {
          navigator.clipboard.writeText(codeBlock.textContent || '');
          copyButton.textContent = '¡Copiado!';
          setTimeout(() => {
            copyButton.textContent = 'Copiar';
          }, 2000);
        };
        
        pre.style.position = 'relative';
        pre.appendChild(copyButton);
      }
    });
  });
</script>

<style>
  /* Custom prose styles for better readability */
  .blog-content {
    @apply text-blue-900 leading-relaxed;
    font-family: 'Source Sans Pro', 'Inter Variable', system-ui, sans-serif;
    line-height: 1.7;
  }
  
  /* Headings */
  .blog-content h1 {
    @apply text-4xl font-bold text-blue-900 mt-12 mb-6 leading-tight;
    border-bottom: 2px solid #e0f2fe;
    padding-bottom: 1rem;
  }
  
  .blog-content h2 {
    @apply text-2xl font-semibold text-blue-900 mt-10 mb-4;
    position: relative;
  }
  
  .blog-content h2::before {
    content: '';
    position: absolute;
    left: -1rem;
    top: 0.5rem;
    width: 4px;
    height: 1.5rem;
    background: linear-gradient(to bottom, #2563eb, #1d4ed8);
    border-radius: 2px;
  }
  
  .blog-content h3 {
    @apply text-xl font-medium text-blue-900 mt-8 mb-3;
    color: #1e40af;
  }
  
  .blog-content h4 {
    @apply text-lg font-medium text-blue-800 mt-6 mb-3;
  }
  
  /* Paragraphs and text */
  .blog-content p {
    @apply text-blue-800 mb-6;
    font-size: 1.1rem;
    line-height: 1.8;
  }
  
  .blog-content strong, .blog-content b {
    @apply text-blue-900 font-semibold;
  }
  
  .blog-content em, .blog-content i {
    @apply text-blue-700 italic;
  }
  
  /* Links */
  .blog-content a {
    @apply text-blue-600 hover:text-blue-800 font-medium;
    text-decoration: underline;
    text-decoration-color: #bfdbfe;
    text-underline-offset: 3px;
    transition: all 0.2s ease;
  }
  
  .blog-content a:hover {
    text-decoration-color: #2563eb;
  }
  
  /* Blockquotes */
  .blog-content blockquote {
    @apply border-l-4 border-blue-400 pl-8 py-4 italic text-blue-700 bg-gradient-to-r from-blue-50 to-transparent rounded-r-lg my-8;
    font-size: 1.2rem;
    position: relative;
  }
  
  .blog-content blockquote::before {
    content: '"';
    position: absolute;
    left: 1rem;
    top: -0.5rem;
    font-size: 4rem;
    color: #93c5fd;
    font-family: Georgia, serif;
  }
  
  /* Lists */
  .blog-content ul, .blog-content ol {
    @apply text-blue-800 mb-6 pl-6;
  }
  
  .blog-content ul {
    list-style: none;
  }
  
  .blog-content ul li {
    @apply mb-3 relative;
    padding-left: 1.5rem;
  }
  
  .blog-content ul li::before {
    content: '▸';
    position: absolute;
    left: 0;
    color: #2563eb;
    font-weight: bold;
  }
  
  .blog-content ol {
    counter-reset: custom-counter;
  }
  
  .blog-content ol li {
    @apply mb-3 relative;
    counter-increment: custom-counter;
    padding-left: 2rem;
  }
  
  .blog-content ol li::before {
    content: counter(custom-counter) '.';
    position: absolute;
    left: 0;
    color: #2563eb;
    font-weight: bold;
    background: #dbeafe;
    border-radius: 50%;
    width: 1.5rem;
    height: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
  }
  
  /* Tables */
  .blog-content table {
    @apply w-full border-collapse my-8 shadow-lg rounded-lg overflow-hidden;
    background: white;
  }
  
  .blog-content thead {
    background: linear-gradient(135deg, #2563eb, #1d4ed8);
  }
  
  .blog-content th {
    @apply px-6 py-4 text-left font-semibold text-white text-sm uppercase tracking-wider;
    border: none;
  }
  
  .blog-content tbody tr {
    @apply transition-colors duration-200;
  }
  
  .blog-content tbody tr:nth-child(even) {
    @apply bg-blue-50;
  }
  
  .blog-content tbody tr:hover {
    @apply bg-blue-100;
  }
  
  .blog-content td {
    @apply px-6 py-4 text-blue-800 border-b border-blue-100;
    font-size: 0.95rem;
    line-height: 1.6;
  }
  
  .blog-content td:first-child {
    @apply font-medium text-blue-900;
  }
  
  /* Code */
  .blog-content code {
    @apply bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm font-mono;
    font-size: 0.9rem;
  }
  
  .blog-content pre {
    @apply bg-slate-900 text-slate-100 p-6 rounded-xl overflow-x-auto my-8 shadow-lg;
    font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
  }
  
  .blog-content pre code {
    @apply bg-transparent text-slate-100 p-0;
    font-size: 0.9rem;
  }
  
  /* Special sections */
  .blog-content hr {
    @apply border-0 h-px bg-gradient-to-r from-transparent via-blue-300 to-transparent my-12;
  }
  
  /* References section styling */
  .blog-content h2:has(+ p:contains("Referencias")),
  .blog-content h2:contains("Referencias"),
  .blog-content h3:contains("Referencias") {
    @apply border-t-2 border-blue-200 pt-8 mt-16;
  }
  
  /* References list - targeting the paragraph after "Referencias" heading */
  .blog-content h2:contains("Referencias") + p,
  .blog-content h3:contains("Referencias") + p {
    @apply hidden;
  }
  
  /* Make references into a proper list */
  .blog-content h2:contains("Referencias") ~ p,
  .blog-content h3:contains("Referencias") ~ p {
    @apply mb-4 pl-6 text-sm text-blue-700 leading-relaxed;
    position: relative;
    background: #f8fafc;
    padding: 1rem 1.5rem;
    border-left: 3px solid #3b82f6;
    border-radius: 0 0.5rem 0.5rem 0;
  }
  
  /* Checklist styling */
  .blog-content h2:contains("Checklist") + ul,
  .blog-content h3:contains("Checklist") + ul {
    @apply bg-green-50 border border-green-200 rounded-lg p-6 my-6;
  }
  
  .blog-content h2:contains("Checklist") + ul li,
  .blog-content h3:contains("Checklist") + ul li {
    @apply flex items-start mb-3 text-green-800;
  }
  
  .blog-content h2:contains("Checklist") + ul li::before,
  .blog-content h3:contains("Checklist") + ul li::before {
    content: '✓';
    @apply text-green-600 font-bold mr-3 mt-1;
    background: #dcfce7;
    border-radius: 50%;
    width: 1.2rem;
    height: 1.2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
    flex-shrink: 0;
  }
  
  /* Micro-checklist special styling */
  .blog-content h2:contains("Micro") + ul,
  .blog-content h3:contains("Micro") + ul {
    @apply bg-blue-50 border border-blue-200;
  }
  
  .blog-content h2:contains("Micro") + ul li::before,
  .blog-content h3:contains("Micro") + ul li::before {
    content: '?';
    @apply text-blue-600 bg-blue-100;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .blog-content {
      font-size: 1rem;
    }
    
    .blog-content h1 {
      @apply text-3xl mt-8 mb-4;
    }
    
    .blog-content h2 {
      @apply text-xl mt-6 mb-3;
    }
    
    .blog-content table {
      font-size: 0.8rem;
    }
    
    .blog-content th,
    .blog-content td {
      @apply px-3 py-2;
    }
    
    .blog-content blockquote {
      @apply pl-6;
      font-size: 1rem;
    }
  }

  /* References styling */
  .references-container {
    @apply mt-8 mb-12;
  }

  .references-list {
    @apply space-y-4;
  }

  .reference-item {
    @apply flex items-start gap-4 p-4 bg-slate-50 border border-slate-200 rounded-lg hover:shadow-md transition-shadow;
  }

  .reference-number {
    @apply flex-shrink-0 w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold;
  }

  .reference-text {
    @apply text-slate-700 text-sm leading-relaxed m-0 flex-1;
    font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
  }

  /* Copy button for code blocks */
  .copy-button {
    @apply absolute top-3 right-3 bg-slate-700 hover:bg-slate-600 text-white text-xs px-3 py-1 rounded transition-colors;
    font-family: system-ui, sans-serif;
  }

  /* Table improvements for mobile */
  @media (max-width: 640px) {
    .blog-content table {
      @apply block overflow-x-auto whitespace-nowrap;
      -webkit-overflow-scrolling: touch;
    }
    
    .blog-content table thead,
    .blog-content table tbody,
    .blog-content table th,
    .blog-content table td,
    .blog-content table tr {
      @apply block;
    }
    
    .blog-content table thead tr {
      @apply absolute;
      top: -9999px;
      left: -9999px;
    }
    
    .blog-content table tr {
      @apply border border-slate-200 mb-4 rounded-lg overflow-hidden;
    }
    
    .blog-content table td {
      @apply border-none relative pl-16 py-3;
      text-align: right !important;
    }
    
    .blog-content table td:before {
      content: attr(data-label);
      @apply absolute left-3 top-3 bottom-3 flex items-center font-semibold text-blue-900 text-left;
      width: calc(50% - 1rem);
    }
  }
</style>
